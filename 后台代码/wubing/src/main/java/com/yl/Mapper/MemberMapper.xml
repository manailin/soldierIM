<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yl.dao.MemberMapper">
	<sql id="memberColumns">
		A.id, A.name
	</sql>
	<select id="get" resultType="Member" parameterType="long">
		select
		<include refid="memberColumns" />
		from lm_member A where id=#{id}
	</select>

	<select id="getUser" resultType="Member" parameterType="long">
		select
		<include refid="memberColumns" />
		from lm_member where id=#{id}
	</select>

	<select id="getUserByName" resultType="Member" parameterType="String">
		select
		<include refid="memberColumns" />
		from lm_member where name=#{name}
	</select>
	<select id="findAllList" resultType="Member" parameterType="com.yl.domain.Member">
		SELECT
		<include refid="memberColumns" />
		FROM lm_member A
		ORDER BY id
	</select>
		<select id="findAll" resultType="Member" >
		SELECT
		<include refid="memberColumns" />
		from lm_member A
	</select>
	<insert id="insert" parameterType="com.yl.domain.Member">
		INSERT INTO lm_member( name<!-- , password, email, gender, birth, mobile,
			area, member_type, pic, fans, focus, help, needHelp, point, is_enable, locked_date;
			login_False_Count, ip, attribute_value0, attribute_value1, attribute_value2,
			attribute_value3, attribute_value4, -->
		)
		VALUES ( #{name}<!-- , #{password}, #{email}, #{gender}, #{birth}, #{mobile},
			#{area}, #{member_type}, #{pic}, #{fans}, #{focus}, #{help}, #{needHelp},
			#{point}, #{is_enable}, #{locked_date}; #{login_False_Count}, #{ip}, #{attribute_value0},
			#{attribute_value1}, #{attribute_value2}, #{attribute_value3}, #{attribute_value4
			}, -->
		)
	</insert>

	<update id="update" parameterType="com.yl.domain.Member">
		UPDATE lm_member
		SET
		name =#{name}
		<!-- company_id = #{company.id}, office_id = #{office.id}, login_name =
			#{loginName}, password = #{password}, no = #{no}, name =#{name}, email =
			#{email}, phone = #{phone}, mobile = #{mobile}, user_type = #{userType},
			update_by = #{updateBy.id}, update_date =#{updateDate}, remarks = #{remarks},
			login_flag = #{loginFlag}, photo =#{photo} name== #{name}, password= #{password},
			email= #{email}, gender= #{gender}, birth= #{birth}, mobile= #{mobile}, area=
			#{area}, member_type= #{member_type}, pic= #{pic}, fans= #{fans}, focus=
			#{focus}, help= #{help}, needHelp= #{needHelp}, point= #{point}, is_enable=
			#{is_enable}, locked_date= #{locked_date}, login_False_Count= #{login_False_Count},
			ip= #{ip}, attribute_value0= #{attribute_value0}, attribute_value1= #{attribute_value1},
			attribute_value2= #{attribute_value2}, attribute_value3= #{attribute_value3},
			attribute_value4= #{attribute_value4}, modify_Date= #{modify_Date}, -->
		WHERE id =#{id}
	</update>

	<update id="updatePasswordById"> UPDATE lm_member SET password = #{password}
		WHERE id
		=
		#{id}
	</update>
	<update id="updateLoginInfo"> UPDATE lm_member
		SET ip = #{ip}, modify_Date =
		#{modify_Date} WHERE id = #{id}
	</update>
	<update id="delete" parameterType="com.yl.domain.Member">
		delete from lm_member
		WHERE id =
		#{id}
	</update>
	<update id="deleteById" parameterType="Long">
		delete from lm_member
		WHERE id =
		#{id}
	</update>
</mapper>
