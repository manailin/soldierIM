<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wowtour.account.dao.FriendDao">
	<resultMap id="FriendMap" type="com.wowtour.account.entity.Friend">
		<id column="id" property="id" />
		<result column="userID" property="userID" />
		<result column="friendID" property="friendID" />
		<result column="status" property="status" />
		<result column="createTime" property="createTime" />
	</resultMap>

	<!--请求加好友-->
	<insert id="save" useGeneratedKeys="true" parameterType="com.wowtour.account.entity.Friend"
	keyProperty="id">
		insert into friends 
			(
			createTime,isInBlackList
			<if test="userID != null">,userID</if>
			<if test="friendID != null">,friendID</if>
			<if test="status != null">,status</if>
			<if test="createBy != null">,createBy</if>		
			)
			values
			(
			now(),0
			<if test="userID != null">,#{userID}</if>
			<if test="friendID != null">,#{friendID}</if>
			<if test="status != null">,#{status}</if>	
			<if test="createBy != null">,#{createBy}</if>	
			)
	</insert>

	<!--修改 -->
	<update id="update" parameterType="com.wowtour.account.entity.Friend">
		update friends set id=#{ id }
			<if test="userID != null">,userID=#{ userID }</if>
			<if test="friendID != null">,friendID=#{ friendID }</if>
			<if test="status != null">,status=#{ status }</if>
			<if test="updateBy != null">,updateBy=#{ updateBy }</if>
			<if test="updateTime != null">,updateTime=#{ updateTime }</if>
			<if test="nickName != null">,nickName=#{ nickName }</if>
			<if test="isInBlackList != null">,isInBlackList=#{ isInBlackList }</if>
		where id=#{ id }
	</update>
	
	<!--修改 -->
	<update id="updateByUserFriend" parameterType="java.util.Map">
		update friends
		<set>
			<if test="status != null">status=#{ status }</if>
		</set>
		where userID= #{userID} and friendID= #{friendID}
	</update>
	
	<select id="selectByUserFriend" parameterType="java.util.Map" resultType="java.lang.Long">
		select id from friends where userID= #{userID} and friendID= #{friendID}
	</select>
		
	<select id="friendlistPage" resultType="java.util.Map" parameterType="java.util.Map">
		select acc.email,fri.status,fri.createTime, acc.id,acc.sex,acc.photoURL from friends fri , account acc
		where fri.userID= #{userID} and fri.status= #{status} and fri.friendID=acc.id
	</select>
	<select id="friendListPage" resultType="java.util.Map" parameterType="java.util.Map">
		select acc.email,fri.status,fri.createTime, acc.id,acc.sex,acc.photoURL from friends fri , account acc
		where fri.userID= #{map.userID} and fri.status= #{map.status} and fri.friendID=acc.id
	</select>
	
	<select id="friendlist" resultType="java.util.Map">
		select acc.email,fri.status,fri.createTime, acc.id,acc.sex,acc.photoURL from friends fri , account acc
		where fri.userID= #{userID} and fri.status= #{status} and fri.friendID=acc.id
	</select>
		<!-- new add or delete friend, search time from last search time until now-->
	<select id="newfriendlistPage" resultType="java.util.Map" parameterType="java.util.Map">
		select acc.email,fri.status,fri.createBy,fri.createTime, acc.userID,acc.nickName,acc.photoURL from friends fri , account acc
		where fri.userID= #{userID} and fri.friId=acc.userID 
		<if test="startTime != null">and friend.createTime &gt; #{startTime}</if>
		<if test="endTime != null">and friend.createTime &lt; #{endTime}</if>
		order by friend.createTime desc
		limit #{msgCount}
	</select>	

</mapper> 